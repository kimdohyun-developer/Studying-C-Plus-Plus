#include<iostream>

using namespace std;

//참조자는 주로 함수에 인수를 전달할 때 사용된다.
//함수가 참조자를 인수로 전달 받으면, 참조자가 참조하고 있는 실제 변수의 값을 함수 내에서 조작할 수 있다. 

void Swap(int&,int&); //함수의 원형 선언  

int main(void)
{
	int num1 = 3, num2 = 7;
	cout<<"변경전 num1의 값: "<<num1<<"변경전 num2의 값: "<<num2<<endl;
	
	Swap(num1,num2);
    cout<<"변경후  num1의 값: "<<num1<<"변경후  num2의 값: "<<num2<<endl;
    return 0; 
}

void Swap(int& x, int& y) //참조자를 사용하여 두 변수의 값을 바꾸는 것, 
{
	int temp;
	
	temp=x;
	x=y;
	y=temp;
}

//위와 같은 참조에 의한 전달은 참조자뿐만 아니라 포인터르르 사용해도 똑같은 결과를 얻을 수 있다.
//포인터를 사용하는 방법과 참조자를 사용하는 방법 모두 결과는 같으며, 구문 형태상의 차이점만 존재한다.

//함수의 인수로 참조자를 사용하는 방법의 특징 
//1. 함수 내에서 참조 연산자(*)를 사용하지 않으므로, 함수 내부의 코드가 깔끔하고 직관적이 됩니다.
//2. 함수의 호출이 값에 의한 전달(call by value) 방법과 같은 형태가 되어, 코드를 읽기가 쉽지 않습니다.

//따라서 간단한 함수에-서는 굳이 참조에 의한 전달을 하지 말고 값에 의한 전달을 사용하는 것이 좋을 수 도 있다.
//또한, 참조 호출이 꼭 필요할때에는 참조자보다는 포인터르르 사용하는 것이 더욱 직관적일 수 있다.
//Plus-C++에서 참조자는 크기가 큰 구조체나 클래스를 다룰 때 에만 사용하는 것이 좋다. 
